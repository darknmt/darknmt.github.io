#+SETUPFILE: ../res/mathsetup.org
#+OPTIONS: toc:1 num:nil
#+STARTUP: latexpreview
#+LINK: scan  file:/home/darknmt/Maths/Scan/%s
#+SELECT_TAGS: public
#+EXLUDE_TAGS: private  <--- Private tags should not be exported. Modify the above line to change this.


* Barrier method and Maximum principle                              :private:
This post aims to give a rigorous proof of the /Barrier principle/ which says that
minimal surfaces could not kiss each other. This principle is well-known but hardly proved
rigorously in other context than Minimal surfaces in \( \mathbb{R}^3 \). For a \(
\mathbb{R}^3 \) proof, see cite:Schoen83_UniquenessSymmetryEmbeddedness. For minimal
surface with boundary in hyperbolic space there is an ad hoc proof by Anderson
cite:Anderson82_CompleteMinimalVarieties. A consequence of Anderson's result is that minimal surfaces
in hyperbolic space stays inside the /convex hull/ of its boundary. We will see that this
is also true for harmonic maps into hyperbolic space.

Given a map \( f: (\Sigma,g) \longrightarrow (M,h) \), using Cartan's moving frames on \(
\Sigma \) and \( M \), one sees that \( f \) is harmonic if and only if
\[
f_{\alpha i i}=0\quad \text{for all } \alpha
\]
Now if \( u \) is a foliating function on \( M \) whose level sets are totally geodesic,
i.e. the Hessian of \( u \), when restricted to \( \ker du \), vanishes. Pull \( u \) back
via \( f \), one has:
\[
 \Delta (u\circ f) = u_{\alpha\beta}f_{\alpha i} f_{\beta i}
\]
In particular, when \( u \) has no critical point and one of the following conditions is satisfied 
1. \( u_{\alpha\beta}=0 \) for all \( \alpha,\beta \) in \( \ker du \),
   i.e. level sets of \( u \) are totally geodesic in \( M \),
2. \( f_{\alpha i} f_{\beta j} g^{ij} = \lambda h_{\alpha\beta} \) for all \( \alpha,\beta
   \) in \( \ker du\) where \( \lambda\in C^0(\Sigma) \), for example when \( f \) is a
   harmonic morphism,
then one has \( \Delta u = u_{\alpha \gamma}f_{\alpha i} f_{\gamma i} = u_{\alpha
\gamma}f_{\alpha i} \frac{1}{|du|} u_i \) where \( \gamma = \frac{\nabla u}{|\nabla u|} \)
is the gradient direction of \( u \) and \( |du| \) is taken in \( M \).


We've just proved that \( u \) solves an "elliptic PDE" \( a_{ij}u_{ij} + b_i u_i + c u =
0 \) with coefficient \( c = 0 \). This means that \( u \) satisfies strong maximum
principle
cite:Nirenberg53_StrongMaximumPrinciple,Gilbarg.Trudinger83_EllipticPartialDifferential.
 
#+ATTR_LATEX: :options [Laplacian on \( \Sigma \)]
#+ATTR_HTML: :id prop:lap-pullback :btit (Laplacian on \( \Sigma \)) 
#+BEGIN_proposition
#+LATEX: \label{prop:lap-pullback}
Given the previous conditions on \( u\in C^2(M) \) and suppose that \( f:\Sigma
\longrightarrow M \) be harmonic, then \( u\circ f \) satisfies strong maximum principle
on \( \Sigma \).
#+END_proposition


In the half-space model \( \{x>0, y^i\in \mathbb{R}\} \) of the hyperbolic space, one can
take \( u=y^i \) so \( |du| = x >0 \)

* Installing Arch Linux <2020-08-25 Tue>                              :private:
It is a good idea to follow the [[https://wiki.archlinux.org/index.php/Installation_guide][Arch Installation guide]], until one sees steps like
"Partition the disk" or "Install compatible bootloader" without clear instruction. Then
follow [[https://itsfoss.com/install-arch-linux/][this guide]]. NOTE: I mount the ESP parition to ~/boot/efi~ instead of ~/efi~
** Boot and Connect to internet
- Acquire the installation image and use it to boot with a USB. Should boot using UEFI and
  not LEGACY (BIOS) mode. Verify that the machine boots in UEFI: =# ls /sys/firmware/efi/efivars=
- Set keyboard layout (My T470s has a GB keyboard): =loadkeys uk=
- Connect to Internet using =iwctl=:
  + device list
  + station /device/ scan
  + station /device/ get-networks
  + station /device/ connect /SSID/
  + Test the connection using =ping archlinux.org=
- Update system clock: =timedatectl set-ntp true=
** Partition the disk using =fdisk=
- If Windows was installed on the hard drive, there is already one EFI
  partition in the disk. DO NOT create another. Use =fdisk -l= to check this.
- Run =fdisk /dev/sdX= and create new partition using =n= and change it type using =t=
  + Create swap partition of 1/2 RAM volume and change its type to "Linux swap"
  + Create root (150GB is more than enough) and home partitions
  + Write change and exit using =w=
** Format the partitions and Mount system
- Format root and home partition using =mkfs.ext4 /dev/sdXy=
- Create swap space using =mkswap /dev/swap_partition= and =swapon /dev/swap_partition=
- Mount root parition to /mnt using =# mount /dev/root_partition /mnt=
- Create (mkdir) =/mnt/home= and mount the home partitions
** Installation
- Use pacman to install =reflector= and choose 70 best mirror servers among 200 recent
  ones: =reflector -l 200 -n 70  --sort rate --save /etc/pacman.d/mirrorlist= . This will
  write =mirrorlist= file to the newly installed system, so it is worth doing it right.
- Install essential packages: =pacstrap /mnt base linux linux-firmware nano=
** System configuration
- Generate fstab file: =genfstab -U /mnt >> /mnt/etc/fstab=
- Change root into the new system =arch-chroot /mnt=
- Set the time zone: =ln -sf /usr/share/zoneinfo/Region/City /etc/localtime= and generate
  /etc/adjtime: =hwclock --systohc=
- Localisation: edit =/etc/locale.gen= and uncomment =en_US.UTF-8 UTF-8= (French and
  Vietnamese too). Run =locale-gen=. Create =/etc/locale.conf= file with: =echo LANG=en_GB.UTF-8 > /etc/locale.conf=
- Create hostfile and rename the machine: =echo Cartan > /etc/hostname= Then =touch
  /etc/hosts= and write this to the file:
  127.0.0.1	localhost
  ::1		localhost
  127.0.1.1	Cartan
- Set the root password: =passwd=
** Install BootLoader
- Install GRUB package =pacman -S grub efibootmgr=
- Mount EFI partition: ~mount /dev/sda1 /boot/efi~
- Install GRUB: 
  ~grub-install --target=x86_64-efi --bootloader-id=GRUB --efi-directory=/boot/efi~
- Update GRUB: ~grub-mkconfig -o /boot/grub/grub.cfg~
  NOTE: output to ~/boot/grub~ and NOT the ESP partition. Check if Windows partition
  exists using ~os-prober~
** Post-Installation
- Install DE: ~pacman -S xorg gnome~
- Enable Display Manager
  systemctl start gdm.service
  systemctl enable gdm.service
  systemctl enable NetworkManager.service
- Exit and restart: ~exit~ then ~shutdown now~
- Install Microcode: ~pacman -S intel-ucode~ or ~pacman -S amd-ucode~
** Package installation
*** ibus-unikey
REF: https://wiki.archlinux.org/index.php/IBus
- install ~ibus, ibus-unikey~
- run ~ibus-setup~
** Troubleshooting
*** No sound and "dummy output"
Delete =~/.config/pulse= and restart

** Hibernation (suspend-to-disk)
This will compress and write RAM to swap partition and turn the computer off. According to
[[https://wiki.archlinux.org/index.php/Power_management/Suspend_and_hibernate#Hibernation_into_swap_file][Arch Wiki]], there are 3 things to do to set this up:
- Creating swap partition or swap file. (We already had a swap partition). The image_size (~/sys/power/image_size~)
  is set to 2/5 of RAM. This fits perfectly with the rule "swap = 1/2 RAM"
- Add kernel parameter to GRUB: In /etc/default/grub, change 
  GRUB_CMDLINE_LINUX_DEFAULT="resume=UUID=308a50c1-5e31-4597-9300-8aca19eb0757"
  where the UUID can be found in ~lsblk -f~. Update GRUB by ~grub-mkconfig -o /boot/grub/grub.cfg~
- Add HOOKS in /etc/mkinitcpio.conf: Add ~resume~ in ~HOOKS = (...)~ . Update using ~sudo mkinitcpio -p linux~
 

* Fundamental group of \( SO(n) \)                              :private:
This post is to explain how to compute the fundamental group of \( SO(n) \) and to give
one geometric intepretation of the [[https://en.wikipedia.org/wiki/Plate_trick][Belt trick]]. One useful technique to compute the
fundamental group of a space is to place it in a fibration \( F \hookrightarrow E
\longrightarrow B \) either as the /fibre/ \( F \), the /base/ \( B \) or the /total
space/ \( E \) and use the long exact sequence of homotopy.

#+ATTR_LATEX: :options [Long exact sequence of homotopy]
#+ATTR_HTML: :id thm:long-seq-pi :btit (Long exact sequence of homotopy) 
#+BEGIN_theorem
#+LATEX: \label{thm:long-seq-pi}
If the fibration \( F \hookrightarrow E \longrightarrow B \) is a Serre fibration, i.e. it
satisfies /homotopy lifting property/, then one has the long exact sequence
\[
\dots \longrightarrow  \pi_n(F) \longrightarrow \pi_n(E) \longrightarrow \pi_n(B)
\longrightarrow \pi_{n-1}(F) \longrightarrow \dots
\]
#+END_theorem
#+BEGIN_proof
One way to prove this theorem is to establish that \( \pi_n(B,b) = \pi_n(E, F_b) \). The
map \( \pi_n(E, F_b) \) to \( \pi_n(B) \) naturally comes from the composition any map \(
(D^n, \mathbb{S}^{n-1}) \longrightarrow (E, F_b) \) with the
bundle map \( E \longrightarrow B \). To produce the inverse, suppose that one has a map
\(f: S^n \longrightarrow B \), by realising it as a map from \( S^{n-1}\times [0,1] \)
with \( f(x,0) = b_0 \) and \( f(x,1)=b_1 \), then choosing an arbitrary lift above \( b_0
\) and applying lifting property, one obtains \( \tilde f: S^n\times \{1\} \longrightarrow
F_{b_1} \). This is the inverse element in \( \pi_n(E,F) \).
#+END_proof

Now to compute \( \pi_1(SO(n)) \), use this sequence
\[
SO(n) \hookrightarrow SO(n+1) \longrightarrow S^n
\]
which comes from fixing a unit vector \( v_0\in S^n \) and seeing where an element of \(
SO(n+1) \) sends it.

The long exact sequence says, for \( n\geq 3\)
\[
\pi_2(S^n)=0 \longrightarrow \pi_1(SO(n)) \longrightarrow  \pi_1(SO(n+1)) \longrightarrow \pi_1(S^n)=0
\]
which means \( \pi_1(SO(3)) = \pi_1(SO(4)) = \dots \). When \( n=2 \), since \( SO(2) = S^1 \)one has
\[
\mathbb{Z} \longrightarrow \mathbb{Z} \longrightarrow \pi_1(SO(3)) \longrightarrow 0
\]
which means that \( \pi_1(SO(3)) \) is either trivial or \( \mathbb{Z}/n \mathbb{Z} \) for
certain \( n >1 \).

A quick way to find \( n \) is to notice that it is the torsion of the generator of \(
\pi_1(SO(3)) \), which comes from the generator of \( \pi_1(SO(2)) \). Image of this loop
in \( SO(3) \) is the \( S^1 \)-family of rotation around the same axis, exactly what is
demonstrated in the Belt trick to be of torsion 2.

Another way to see that \( n=2 \) is to come back to the map \( \pi_2(S^2) \longrightarrow
\pi_1(S^1) \) in Theorem ref:thm:long-seq-pi. In the following discussion, we describe a
3D rotation either by giving its axis, or its equator. Suppose that \( b_0 \) is the South
pole, \( b_1 \) is the North pole and call \( R_\alpha \) the rotation whose equator is the latitude \( \alpha \), \(
\alpha\in [0,2\pi[ \), by the angle \( \pi \), and \( R(\theta) \) the rotation around
axis \( b_0-b_1 \) by angle \( \theta \). The image of the generator of \(
\pi_2(S^2) \) in \( \pi_1(S^1)\hookrightarrow \pi_1(SO(3)) \) is the \( S^1 \)-family \(
R_\alpha, \alpha\in [0,2\pi[ \). Those are rotations that maps \( b_0 \) to \( b_1 \) and
to identify them with a loop in \( ]pi_1(SO(2)) \), one uses
\[
R_\alpha = R(2\alpha)\circ R_0
\]
So this is twice the generator loop \( R(\theta),\theta\in [0,2\pi[ \) of \( \pi_1(SO(2))
\), and we conclude that \( n=2 \).

#+BEGIN_remark
An interesting exercise is to check that \( n=1 \) for the Hopf fibration, i.e. the map \(
\pi_2(S^2) \longrightarrow \pi_1(S^1) \) in the long exact sequence of \( S^1
\hookrightarrow S^3 \longrightarrow S^2 \) is isomorphism. This means that the Hopf
fibration is the "universal" \( S^2 \)-bundle over \( S^1 \). Note that \( S^3 \) is the universal
cover of \( SO(3) \).
#+END_remark
* Complexification and How to see  \( SU(2)  = Sp(1) \)                              :private:
We will define \( SU(2) \) as the group of complex linear maps preserving a hermitian
metric with determinant 1 and \( Sp(1) \) as the group of unit quaternions, or equivalently the unit sphere of \(
{\rm Aut}_{\mathbb{H}}(\mathbb{H}, \mathbb{H}) \).

Let \( (V,I,h) \) be a 4-dimensional vector space with a complex structure \( I \) and a
hermitian metric \( h \). Recall that since \( I^2 = -1 \), the extension of \( I \) on \(
V\otimes_{\mathbb{R}}\mathbb{C} \) decomposes this \( \mathbb{C} \)-vector space into \(
V\otimes_{\mathbb{R}}\mathbb{C} = V^{1,0} \oplus V^{0,1} \) on which \( I=\pm i \)
respectively. We also have \( V^*\otimes_{\mathbb{R}} \mathbb{C} = \Hom_\mathbb{C}((V,I),
(\mathbb{C},i))\oplus \Hom_\mathbb{C}((V,J),
(\mathbb{C},-i)) = (V^{1,0})^*\oplus (V^{0,1})^* \) where \( (V^{1,0})^*
:=\Hom_{\mathbb{C}}(V^{1,0}, \mathbb{C}) = \Hom_{\mathbb{C}}((V,J), (\mathbb{C},i)) \). It
is conventional to write a \( \mathbb{R} \)-basis of \( V \) as \( \frac{\partial}{\partial x^i},
\frac{\partial}{\partial y^i} = I \frac{\partial}{\partial x^i}, i=\overline{1,2} \) and
the corresponding \( \mathbb{C} \)-basis of \( V^{1,0} \) as \(
\frac{\partial}{\partial z^i} = \frac{1}{2}\left(\frac{\partial}{\partial x^i} - i
\frac{\partial}{\partial y^i}\right) \) and that of \( (V^{1,0})^* \) as \( dz^i = dx^i +
i dy^i \). 

Note that when writing \(\Hom_{\mathbb{C}}(V^{1,0}, \mathbb{C}) =
\Hom_{\mathbb{C}}((V,I), (\mathbb{C},i)) \) or \( dz^i + d\bar{z^j} \), we implicitly identify \( V \) with \(
V^{1,0} \) as \( \mathbb{R} \)-vector spaces by \( \frac{\partial}{\partial x^i}\mapsto
\frac{\partial}{\partial z^i} \) and \( \frac{\partial}{\partial y^i} \mapsto i
\frac{\partial}{\partial z^i} \).

The hermitian metric \( h \) is an element of \( (V^{1,0})^*\otimes
(V^{0,1})^* =\Hom_{\mathbb{C}}((V,I)\oplus (V,-I), \mathbb{C})\), typically writen as \( h
= dz^1\otimes d\bar{z^1} + dz^2\otimes d\bar{z^2}\), 
and the subspace of  \(
{\rm Aut}_{\mathbb{C}}((V,I), (V,I)) \) of automorphism perserving \( h \) is denoted by
\( U(V) \). Saying that the determinant of such automorphism \( f \) is 1 means that \( f
\) preserves the form \(w_\alpha = \alpha  dz^1\wedge dz^2 \).

We can see that there is always an \( \mathbb{R} \)-automorphism \( J_\alpha \) of \( V \) such
that \( h(u,J_\alpha v) = w_\alpha(u, v) \). If \( V^{1,0} = \mathbb{C}^2 \) and \( I \) is given
by \( {\rm diag}(i, -i) \) then \( J_{-i}= \begin{bmatrix} 0 & i \\ i & 0\end{bmatrix} \)
and \( J_{-1} = \begin{bmatrix} 0 & -1 \\ 1 & 0\end{bmatrix}  \). 
In any case, \( f \) preserves an additional complex structure \( J \) that satisfies
\( [I,J]=0 \) and therefore is a \( \mathbb{H} \)-morphism.

#+BEGIN_remark
The space of second complex structure, i.e. the space of additional quaternion structure
compatible with \( I \), is the same as the space of \( \mathbb{C} \)-linear skew 2-form
of norm 2.
#+END_remark




* The Trace operator in Yang--Mill theory                               :private:

/TL;DR:/ Physicists abuse notations most of the time for good reasons. The Trace
operator in gauge theory, for example in [[https://www.wikiwand.com/en/Chern%E2%80%93Simons_form][Chern--Simons form]], is another instance of this.


Every time I came across an abused notation from physicists, I tend to tell myself
that these guys messes up things again, yet days, or months later I find it to be
intuitive and useful. The last time that this occurs was when I tried to figure out
the Trace operator that confuses students in both [[https://mathoverflow.net/questions/36178/what-is-the-trace-in-the-chern-simons-action][mathematics]] and [[https://www.physicsoverflow.org/31671/%24a-wedge-a-wedge-a%24-in-chern-simons][physics]] when reading
lines like
\[
\tr(A\wedge dA) = \langle A, dA \rangle \text{ or } \tr(A\wedge A\wedge A) = \langle [A, A],
A \rangle.
\]
I will explain that the operator noted as \( \tr \) here is "most of the time" a multiplicative constant
different from the trace of matrice and argue why I will continue to abuse this operator.

** Calculus of gauge theory.
Recall that gauge theory is about studying the space of connections (and its subspaces) of
a principal \( G \)-bundle \( P \) over a manifold \( X \). For Yang--Mill, \( G \) is \(
SU(n) \). A connection \( A \) is an \( G \)-equivariant 1-form on \( P \) with value in its Lie
algebra \( \mathfrak{g} \), and the difference \( A-A' \) of 2
connections descend to \( \mathfrak{g} \)-valued 1-form on the base \( X \). The spaces of
all these forms are denoted by \( \Omega_P^1(\mathfrak{g}) \) and \(
\Omega_X^1(\mathfrak{g}) \). 
An alternative point of view is via a vector bundle \( E =
P\times_G V \) associated to a representation \( V \) of \( G \). A connection \( A \)
induces a covariant derivative \( \nabla_A \) on tensor valued in \( E \) and an exterior derivative \(
d_A: \Omega_X^p(E) \longrightarrow \Omega_X^{p+1}(E) \) 
on \( E \)-valued forms that extends \( \nabla_A \) using Leibniz rule.

One no longer has \( d_A\circ d_A = 0 \), but the failure of this being zero is measure by the
/curvature/ \( F_A\in \Omega_X^2(\mathfrak{g}) \): \( d_A\circ d_A s = F_A. s \)
where the dot (that we will obmit eventually) is the combination of 2 operations: wedging
the form and having \( \mathfrak{g} \) acting of a fibre \( V \) of \( E \) via \(
\mathfrak{g} \longrightarrow \End(V) \) since \( G \longrightarrow Aut(V) \).

When \( V\) is chosen to be the adjoint representation \( \rm Ad \) of \( G \) on
its Lie algebra  \( \mathfrak{g} \), the vector bundle is called \( {\rm ad}P \) and the action \( \mathfrak{g}\longrightarrow \End(\mathfrak{g}) \) is 
by definition the Lie bracket \( a\mapsto \left({\rm
ad}_a: b\mapsto [a,b] \right) \). So for any \( a\in \Omega^1_X(\mathfrak{g}) \), \(
d_A d_A a = [F_A,a] \). 

Note that for \( a,b\in \Omega^\bullet_X(\mathfrak{g}) \), the Lie bracket \( [a,b] \)
makes sense, but the product \( a\wedge b \), given by combining wedge product and matrice
multiplication, does not, except when \( b=a \) and they have
odd degree then \( a\wedge a = \frac{1}{2}[a,a]  \). This means that \( A\wedge dA \) and
\( A\wedge A\wedge A \) are not even forms in \( \Omega_X^\bullet(\mathfrak{g}) \) (we
will see that if they are, then the trace will be 0) but we
will be able to take their "trace" any way.


** It is the Killing form.
The above trace operator is an abusive way to denote the [[https://en.wikipedia.org/wiki/Killing_form][Killing form]] on \( \mathfrak{g}
\).

#+ATTR_HTML: :id thm:killing 
#+BEGIN_theorem
#+LATEX: \label{thm:killing}
There is a symmetric bilinear form \( B \) on a Lie algebra \( \mathfrak{g} \) that is
ad-invariant, i.e. \( B([x,y], z) = B (x,[y,z]) \) given by 
\[
 B(x,y) = \tr({\rm ad}(x).{\rm ad}(y)).
\]
This allows us to define a cycle-invariant product \( x_1\dots x_n \) given by any way of
placing the Killing form and Lie brackets between them.
#+END_theorem
So \( \tr(a\wedge b\wedge c) \) denotes the combined operation of wedging the form and
doing \( B(a, [b,c]) \) in \( \mathfrak{g} \) with their coefficients.

#+BEGIN_remark
1. The cycle-invariant property means that \( x_1\dots x_n = x_n x_1\dots x_{n-1} \). This
   fits well with the matrice trace \( \tr(AB) = \tr(BA) \) and \( \tr(ABC) = \tr(CAB) \).
2. Let \( e^i \) be a (vector-space) basis of \( \mathfrak{g} \) and \( [e^i, e^j]=:
   c^{ij}_ke^k \) be structure coefficients, then \( {\rm ad}(e^i){\rm ad}(e^j) e^k =
   [e^i, [e^j, e^k]]= [e^i,c^{jk}_he^h] = c^{jk}_h c^{ih}_l e_l \) so
   \[
    B^{ij}:=B(e^i, e^j) = c^{ih}_kc^{jk}_h
   \]
    is the simplest 2-tensor created using structure coefficients. 
3. Another reason for which this cycle product fits well with matrice trace is that it is
   most of the times matrice trace. If \( \mathfrak{g} = \mathfrak{su}(2)\) then identify
   \( \mathfrak{g} \) with \(\im \mathbb{H}
   \) we see that \( B(A,B) = 4\tr(AB) = -4\|A\|^2 \). More example can be found in the table [[https://en.wikipedia.org/wiki/Killing_form][here]].
#+END_remark

Using the trace notation is a way to avoid writing the Killing form in context such as \(
\langle A,A \rangle \) and possible confusion with the Euclidean norm \( \|A\|^2 \). It is
important to distinguish the two because 
1. \( \tr F_A^2 = \tr ((F_A^+)^2 - (F_A^-)^2) = (-
   \|F_A^+\|^2 + \|F_A^-\|^2)\vol  \) is a characteristic class in \( H^4(X) \) of the
   bundle, so \( \int_X \tr F_A^2 \) is a constant independent of the connection \( A \)
2. Meanwhile, \( \int_X \|F_A\|^2 = \int\|F^+_A\|^2 + \|F_A^-\|^2 \) is the Yang--Mill functional.

A connection \( A \) is called ASD if and only if these two are equal.
* Giải thích một video của 3Blue1Brown bằng ma trận 2x2 <2019-08-05 Mon>     :public:

** Giới thiệu
Trong một video trên kênh YouTube 3Blue1Brown (/The most unexpected answer to a counting puzzle/, taị
https://www.youtube.com/watch?v=HEfHFsfGXjs) được chia sẻ rất nhiều trong thời gian gần
đây, Grant Sanderson đã giới thiệu bài toán sau của Gregory
Galperin về sự va chạm của 2 hình hộp như hình dưới đây, trong đó hộp bên trái có khối
lượng bằng 1 và hộp bên phải có khối lượng là \( m \geq 1 \).
file:../img/3B1B-1.png

Ở thời điểm bắt đầu, hộp bên phải chuyển động thẳng đều về phía tường (bên trái) và hộp trái đứng yên. Hai hộp
có thể va chạm với nhau và với tường. Giả sử không có ma sát và các va chạm đều
là đàn hồi (động lượng và năng lượng được bảo toàn), ta muốn đếm tổng số va chạm (hộp-hộp và
hộp-tường), chẳng hạn trong trường hợp khối lượng hai vật bằng nhau (\( m=1 \)) có tổng
cộng 3 va chạm: hộp phải với hộp trái (sau đó hộp phải đứng yên), hộp trái với tường, và
hộp trái với hộp phải (sau đó hộp trái đứng yên). Trong trường hợp \( m=100 \), tổng số va chạm
là 31 và nếu \( m=10000 \), là 314. Grant Sanderson chỉ ra rằng nếu \( m \) là một lũy thừa của 100, giả sử \( 100^k \) thì
số va chạm là \( k \) chữ số đầu tiên của số \( \pi \).

Youtuber này cho rằng thực hiện thí nghiệm này và đếm số va chạm là cách tính số \( \pi \)
đẹp nhất nhưng cũng kém hiệu quả nhất, so sánh khối lượng \( m \) cần thiết để
tính chính xác 20 chữ số thập phân của \( \pi \) với khối lượng một lỗ đen. Anh dành một
tuần để khán giả của mình suy nghĩ vì sao số \( \pi \) lại xuất hiện trong một bài toán va chạm đàn hồi.

Qua bài tập
sau, ta sẽ thấy đường tròn (hay số \( \pi \)) xuất hiện một cách tự nhiên qua góc argument của
giá trị riêng (phức) của một ma trận 2x2. Sử dụng một số
tính toán cơ bản được học trong môn đại số tuyến tính, ta sẽ chứng minh tổng số va chạm là
\[
N = \left \lfloor \frac{2\pi}{\arccos(\frac{m-1}{m+1})}\right\rfloor \text{ khi } m\geq 2
\]

Với \( m \) lớn, dùng khai triển Taylor \( \arccos(1 - 2\epsilon) = 2\sqrt{\epsilon} +
O(\epsilon^{3/2}) \) ta có 
\[ 
\frac{2\pi}{\arccos(\frac{m-1}{m+1})} = \frac{2\pi}{2(m+1)^{-1/2} + O((m+1)^{-3/2})}=
\pi\sqrt{m+1} + O(\frac{1}{\sqrt{m+1}})  
\]
Do đó khi \( m=100^k \) thì \( N = \pi .10^k \) là \( k \) chữ số đầu tiên của \( \pi \).

** Mô hình hoá
*** Va chạm giữa 2 hộp

Chọn chiều dương từ trái sang phải và gọi \( a,b \) lần lượt là vận tốc của hộp phải và
hộp trái trước khi va chạm, và \( a', b' \) là vận tốc ngay sau khi 2 hộp chạm nhau, định luật bảo toàn động lượng và
năng lượng (Sách giáo khoa Vật Lý lớp 10) nói rằng
\begin{equation*}
 \begin{cases}
\frac{1}{2}ma'^2 + \frac{1}{2}b'^2 = \frac{1}{2}ma^2 + \frac{1}{2}b^2,  \\
ma' + b' = ma + b
 \end{cases}
\end{equation*}
Viết lại phương trình thứ nhất thành \( \frac{1}{2}m(a' - a)(a'+a) =
\frac{1}{2}(b-b')(b+b') \) và thế \( m(a'-a) = b-b' \) (phương trình thứ 2)
ta có hệ phương trình
\begin{equation}
\label{eq:bb}
 \begin{cases}
a'-b' = a-b,  \\
ma' + b' = ma + b
 \end{cases}
\end{equation}


**** Câu 1.
Dùng phép khử Gauss để tính \( a', b' \) theo \( a, b \) từ hệ phương trình
eqref:eq:bb. Viết lại dưới dạng phép nhân ma trận \( \begin{bmatrix} a'
\\ b' \end{bmatrix} = A_m  \begin{bmatrix} a
\\ b \end{bmatrix} \) với \( A_m \) là một ma trận 2x2 có các hệ số phụ thuộc vào \( m
\). Tính \( A_m \).
#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
\[
A_m =  \begin{bmatrix} \frac{m-1}{m+1} & \frac{2}{m+1}\\ \frac{2m}{m+1} &
\frac{1-m}{1+m} \end{bmatrix}
\]
#+END_proof


*** Va chạm với tường
Vector vận tốc của hộp bên trái đổi chiều khi va chạm với tường. Nếu gọi \( a,b \) lần lượt là
vận tốc của hộp phải và hộp trái trước khi hộp trái chạm tường
và \( a', b' \) là vận tốc ngay sau khi chạm, ta có 
\begin{equation*}
\begin{bmatrix} a' \\ b'  \end{bmatrix} 
= B  \begin{bmatrix} a \\ b \end{bmatrix}
\text{ với } B = \begin{bmatrix}1 & 0 \\ 0 & -1 \end{bmatrix}
\end{equation*}


*** Điều kiện dừng
Vận tốc 2 hộp ban đầu được biểu diễn bởi vector \(\begin{bmatrix} a_0\\b_0 \end{bmatrix}
:= \begin{bmatrix} -1\\0 \end{bmatrix} \) và vận tốc sau \( n \) lần va chạm biểu diễn bởi
vector
\begin{equation*}
 \begin{bmatrix} a_n\\b_n \end{bmatrix} = \dots B A_m B A_m \begin{bmatrix} a_0\\b_0 \end{bmatrix}
\end{equation*}
cho bởi phép nhân bên trái xem kẽ với các ma trận \( A_m \) và \( B \), kết thúc bằng \( B
\) nếu \( n \) chẵn và \( A_m \) nếu \( n \) lẻ.

Sẽ không còn va chạm khi và chỉ khi vận tốc cả 2 hộp đều dương và hộp bên phải đi nhanh
hơn hộp bên trái, nói cách khác là khi \( a_n\geq b_n\geq 0 \). Bài toán được mô hình hoá
thành.

**** Bài toán.
Tìm số tự nhiên \( n \) nhỏ nhất sao cho \( a_n\geq b_n \geq 0 \).

Nhận thấy rằng để tính \( a_n, b_n \), ta chỉ cần tính được lũy thừa của ma trận \( C :=A_m B \)

**** Câu 2.
Tính ma trận \( C := A_m B \). Tìm vết và định thức của \( C \). Bạn có nhận xét gì về 2
giá trị riêng của \( C \). 


#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
\[
 C = \begin{bmatrix} \frac{m-1}{m+1} & \frac{-2}{m+1}\\ \frac{2m}{m+1} &
 \frac{m-1}{m+1} \end{bmatrix},\quad \tr(C) = 2\frac{m-1}{m+1},\quad \det C = 1
\]
/Nhận xét./ Hai giá trị riêng của \( C \) là 2 số phức liên hợp có module 1, do đó được biểu diễn bởi
 một góc \( \theta \). Đây là lý do số
 \( \pi \) xuất hiện trong kết quả đếm. Dựa vào phần thực của chúng, ta thấy \( \theta =
 \arccos(\frac{m-1}{m+1}) \) là góc đã nhắc đến trong đầu bài.
#+END_proof

** Đơn giản hoá tính toán.
Nhận xét rằng \( \begin{bmatrix} a_0\\b_0 \end{bmatrix} = B\begin{bmatrix} a_0\\b_0
\end{bmatrix} \), ta viết lại
\[
 \begin{bmatrix} a_n\\b_n \end{bmatrix} = \dots B A_m B A_m B \begin{bmatrix} a_0\\b_0
\end{bmatrix} = \begin{cases}
B C^k	\begin{bmatrix} a_0\\b_0
\end{bmatrix}	,  & \text{khi $ n = 2k$} \\
C^k \begin{bmatrix} a_0\\b_0
\end{bmatrix}		, & \text{khi $n = 2k - 1$}
		\end{cases}
\]
trong đó \( C = A_m B \) là ma trận ở câu 2.

Một cách để tính \( C^k \) là chéo hoá ma trận \( C \), vì khi \( C = P^{-1} D P \) với \(
D = \begin{bmatrix} \lambda_1 & 0\\ 0 &
\lambda_2 \end{bmatrix} \) là một ma trận chéo thì \(C^k = P^{-1}D^k P\) với \( D^k = \begin{bmatrix} \lambda_1^k & 0\\ 0 &
\lambda_2^k \end{bmatrix}  \).

**** Câu 3.
Ma trận \( C \) có chéo hoá được trên \( \mathbb{C} \) không? Lưu ý: Bạn không cần chéo hóa ma trận
\( C \) để trả lời.
#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
Có. Nhắc lại rằng một ma trận vuông bậc \( k \) chéo hoá được khi và chỉ khi tổng số chiều
cuả các không gian riêng bằng \( k \). Do 2 giá trị riêng cuả \( C \) khác nhau nên \( C
\) có 2 không gian riêng, số chiều của mỗi
không gian ít nhất là 1 nên tổng số chiều đúng bằng 2.
#+END_proof


Sau đây ta sẽ tính luỹ thừa của ma trận \( C \) mà không chéo hoá.

**** Câu 4.
Tính đa thức tối tiểu \( Q(X) \) của ma trận \( C \).
#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
Nhắc lại rằng đa thức tối tiểu là ước của đa thức đặc trưng của \( C \), i.e. \( X^2 - 2 \frac{m-1}{m+1} X + 1 = 0  \). Do 2 giá trị
riêng của \( C \) khác nhau nên đa thức tối tiểu cũng là đa thức đặc trưng.
#+END_proof

Ta sẽ tính \( C^k \) bằng cách thực hiện phép chia đa thức \( X^k \) cho \( Q(X)
\):
\begin{equation}
\label{eq:min-pol}
 X^k = P_k(X)Q(X) + u_k X + v_k, \quad P_k\in \mathbb{R}[X], \quad u_k, v_k\in \mathbb{R}
\end{equation}
Do đa thức \( Q \) triệt tiêu \( C \), ta có thể tính \( C^k = u_k C + v_k \) nếu biết hai
số thực \(u_k \) và \( v_k \). 

Gọi \( \lambda \) và \( \bar\lambda = \lambda^{-1} \) là hai
giá trị riêng của \( C \).


**** Câu 5.
Chứng minh rằng \( u_k = \frac{\lambda^{2k} - 1}{\lambda^{k-1}(\lambda^2-1)} =
\lambda^{-(k-1)} + \lambda^{-(k-1) + 2} + \dots + \lambda^{k-1} \) và \( -v_k
=  \frac{\lambda^{2(k-1) - 1}}{\lambda^{k-2} (\lambda^2-1)} = \lambda^{-(k-2)} +
\lambda^{-(k-2) + 2} + \dots + \lambda^{k-2} \).
#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
Thế \( X \) bởi \( \lambda \) và \(\bar \lambda\) vào
eqref:eq:min-pol, lưu ý rằng \( Q(X)=0 \), ta có hệ phương trình
\begin{equation*}
 \begin{cases}
u_k\lambda + v_k = \lambda^k   \\
u_k\bar \lambda + v_k = \bar\lambda^k 
 \end{cases}
\end{equation*}
Sau đó giải hệ phương trình này để tính \( u_k, v_k \).
#+END_proof


**** Câu 6.
Tính \( \begin{bmatrix} a_{2k-1}\\b_{2k-1} \end{bmatrix} = C^k \begin{bmatrix} -1\\0
\end{bmatrix} \) và \( \begin{bmatrix} a_{2k}\\b_{2k} \end{bmatrix} = BC^k \begin{bmatrix} -1\\0
\end{bmatrix} \) theo \( u_k, v_k \). Thay \( \frac{m-1}{m+1} = \frac{1}{2}(\lambda + \lambda^{-1}) \)
và \( \frac{2m}{m+1} = \frac{1}{2}(\lambda + \lambda^{-1}) + 1 \), chứng minh rằng \( a_{2k-1} - b_{2k-1} = u_k - v_k
\) và \( b_{2k} - a_{2k} = u_k - v_k +\lambda^k + \lambda^{-k} \)
#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
\begin{equation*}
 \begin{bmatrix} a_{2k-1}\\b_{2k-1} \end{bmatrix}   = \begin{bmatrix} -u_k.\frac{m-1}{m+1} -
v_k\\-u_k.\frac{2m}{m+1} \end{bmatrix}, \qquad \begin{bmatrix} a_{2k}\\b_{2k} \end{bmatrix}=  \begin{bmatrix} -u_k.\frac{m-1}{m+1} -
v_k\\u_k.\frac{2m}{m+1} \end{bmatrix}
\end{equation*}
Với \( b_{2k} - a_{2k} \), để ý rằng \(  \)\( u_k\lambda^{\pm 1} = -v_k + \lambda^{\pm k} \).
#+END_proof

** Trực quan hình học

Viết \( \lambda = e^{i\theta} \) với \( \theta =
 \arccos(\frac{m-1}{m+1}) \).  Với mọi \( k\geq 1 \), đặt
\[
S^2_k:= \lambda^{-k} + \lambda^{-k+2} + \dots + \lambda^{k-2} + \lambda^k\quad \text{và}\quad S^1_k = \lambda^{-k} + \lambda^{-k+1} + \dots + \lambda^{k-1} + \lambda^k
\]


**** Câu 7.
Chứng minh rằng \( (a_{2k-1},b_{2k-1}) \) thoả mãn điều kiện
dừng \( a_{2k-1}\geq b_{2k-1}\geq 0 \) khi và chỉ khi \( S^1_{k-1} \geq 0 \) và \(
   S^{2}_{k-1}\leq 0 \). Chứng minh rằng \( (a_{2k},b_{2k}) \) thoả mãn điều kiện
dừng \( a_{2k}\geq b_{2k}\geq 0 \) khi và chỉ khi \( S^1_{k} \leq 0 \) và \(
   S^{2}_{k-1}\geq 0 \).
#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
Hiển nhiên khi viết lại \( u_k = S^2_{k-1} \), \( u_k-v_k = S^1_{k-1} \) và \( u_k-v_k +\lambda^k +\lambda^{-k} = S^1_{k} \).
#+END_proof

Xem \( S^2_k \) ( tương ứng \( S^1_k \)) là tổng của \( k+1 \) (tương ứng \( 2k+1 \))
vector cách đều trên đường tròn đơn vị, mệnh đề sau là hiển nhiên về mặt trực quan và
được thừa nhận.

**** Mệnh đề.
Giả sử \( k\leq \left \lfloor \frac{\pi}{\theta} \right\rfloor \). Khi đó 
1. \( S^1_k \leq 0
   \) khi và chỉ khi cung tròn từ \( \lambda^k \) đến \( \lambda^{-k} \) nhỏ hơn hoặc bằng \( \theta \).
2. \( S^2_k \leq 0 \) khi và chỉ khi cung tròn từ \( \lambda^k \) đến \( \lambda^{-k} \)
   nhỏ hơn hoặc bằng \( 2\theta \).


**** Câu 8.
Dùng mệnh đề, chứng minh rằng với \( h =  \left \lfloor \frac{\pi}{\theta} \right\rfloor
\) thì hoặc \( (a_{2h}, b_{2h}) \) hoặc \( (a_{2h+1}, b_{2h+1}) \) thoả điều kiện dừng,
còn các bộ \( (a_i, b_i) \) với \( i < 2h \) không dừng. Từ đó suy ra \( N = \left \lfloor
\frac{2\pi}{\theta} \right \rfloor\).
#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
Nếu cung từ \( \lambda^h \) đến -1 nhỏ hơn \( \frac{\theta}{2} \) thì \( (a_{2h}, b_{2h})
\) dừng, ngược lại thì \( (a_{2h+1}, b_{2h+1}) \) dừng.
#+END_proof

Một tuần sau video nói trên, Grant Sanderson đưa ra lời giải của anh tại
https://www.youtube.com/watch?v=jsYwFizhncE bằng một lập luận tương đối đơn giản. Kết quả của
anh là \( N = \left \lfloor \frac{\pi}{\phi} \right\rfloor \) với \( \phi = \arctan
\frac{1}{\sqrt{m}} \)

**** Câu 9 (Không tính điểm).
So sánh hai số va chạm \( N \) ở đầu bài vơí kết quả cuả Grant Sanderson.
#+ATTR_LATEX: :options [Đáp án.]
#+BEGIN_proof
\(\theta = 2\phi\).
#+END_proof

* Commutative diagram in \( \TeX \) revisited     :public:
** xypic and xyJax
To my knowledge, the only way to type commutative diagram on the web is to use ~xyJax~, a
third-party extension of ~MathJax~ that render diagram using ~xypic~. This is also how
[[https://stacks.math.columbia.edu/][Stacks Project]] was set up.

The syntax of ~xypic~ is almost the same as ~tikz-cd~, to a basic user the only difference
is how arrows are typed. I learn ~xypic~ syntax by rewriting a GUI editor for ~tikzcd~ by
[[https://tikzcd.yichuanshen.de][Yichuan Shen]] to output ~xypic~ code. [[https://darknmt.github.io/res/xypic-editor/][Here]] is the ~xypic~ version of the editor. I also
host a copy of the ~tikz-cd~ editor [[http://darknmt.github.io/res/tikzcd-editor][here]].

The configuration of ~xyJax~ or any third-party extension MathJax was not very easy for
 me, since it seems that MathJax CDN no longer hosts third-party extensions. So I have to
 host my own copy of ~xyJax~ and tell MathJax CDN to use it, as indicated in [[http://docs.mathjax.org/en/latest/options/ThirdParty.html][its
 documentation]]. Also, one also has to [[https://github.com/sonoisa/XyJax/blob/master/README.md][reconfig a path]] in ~xyJax~.

To config MathJax in org-mode, apropos ~org-html-mathjax-template~.

* LaTeX in Inkscape: Incompatibility between ~ghostscript~ and ~pstoedit~ <2018-03-30 Fri>       :private:
Since Ghostscript 9.22, certain flags (e.g. ~dREALLYDEALYBIND~) are deprecated and ~pstoedit~,
a piece of software that Inkscape uses to render LaTeX, remains unchanged since 2005. This
makes Inkscape users unable use LaTeX. Textext developers claims that they will switch to
~pdf2svg~ frontend in their version 0.8 to avoid this trouble with ~pstoedit~. Meanwhile,
the only solution seems to be downgrade ghostscript to 9.21 each time one uses Inkscape.
In ArchLinux, one can downgrade a package using ~pacman~: 

#+BEGIN_SRC bash
ls /var/cache/pacman/pkg/ | grep ghostscript
pacman -U /var/cache/pacman/pkg/package-old_version.pkg.tar.xz
#+END_SRC

or a AUR package called ~downgrade~

#+BEGIN_SRC bash
downgrade ghostscript
#+END_SRC

I had good experience with both of them (~pacman~ to downgrade ~php~ to be compatible
with ~nextcloud~, and ~downgrade~ for ghostscript)


The problem is well documented [[https://bbs.archlinux.org/viewtopic.php?id=224340][here]] and [[https://bitbucket.org/pitgarbe/textext/issues/48/ghostscript-still-bug-under-linux][here]].

* LaTeX indentation in org-mode <2018-02-20 Tue>                              :public:
  I was told, in accordance with my experience, that we visually process text better if
  each line in a paragraph is approximately below 80 characters. This can be observed
  everywhere from the Internet to books and standardized tests, and is now fundamentals of web
  design (somehow Wikipedia is an exception).

  In Emacs, the key binding ~M-q~ will execute the ~fill-paragraph~ function that
  automatically shrinks text and insert "soft" newlines to shorten line below a certain
  threshold. This function however does not respect the LaTeX structure, e.g. it inserts
  line break inside inline equation and merge display equation.
  format paragraph.

#+BEGIN_SRC org
  This is a long long long long long long long long long paragraph with equation \( 1+1 = 
  2+0=3-1=4-2 \) with an equation in display \[ 1+ 1 = 2\].
#+END_SRC

The problem has been noticed around the Internet [[https://emacs.stackexchange.com/questions/29122/prevent-fill-paragraph-from-breaking-latex-displayed-equations-in-org-mode][here]] and [[https://emacs.stackexchange.com/questions/34938/is-there-a-fill-paragraph-function-which-tries-to-not-break-subordinate-parenthe?rq=1][there]].  

Meanwhile AUCTeX does not have this annoying problem. [[https://www.gnu.org/software/auctex/manual/auctex.html#index-LaTeX_002dfill_002dbreak_002dat_002dseparators][It turns out]] that AUCTeX maps the
~M-q~ key to a different function, called ~LaTeX-fill-paragraph~. So the temporary fix is
to load ~latex.el~ in org-mode and maps ~M-q~ to ~LaTeX-fill-paragraph~

#+BEGIN_SRC org
(load "latex.el")
(global-set-key "\M-q" 'LaTeX-fill-paragraph)
#+END_SRC

* A map of mathematics <2017-10-17 Tue>                              :private:

  I saw this [[https://www.flickr.com/photos/95869671@N08/32264483720][map of mathematics]] somewhere on YouTube and then again on the door of
  someone's office at the I2M. Although this map may help popularise mathematics, it
  could not please a serious math student (or even an attentive highschool
  student, as 1 was listed among prime numbers).

  For a decent map of Mathematics, made by a mathematician, see [[http://www.math.unm.edu/~buium/mapp.pdf][this]].

* My 2016-2017 internship <2017-07-31 Mon>     :public:

I have just recently finished my Stage3A at [[https://www.i2m.univ-amu.fr/][Institut de Mathématiques de Marseille]]. It is
also in this period that I start this blog. The memoire can be found here [[[../res/Stage2017.pdf][PDF]]]


#+LATEX:\iffalse
bibliographystyle:alpha
bibliography:../res/GeoDiff.bib
#+LATEX:\fi
